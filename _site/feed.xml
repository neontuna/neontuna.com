<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Night Iron</title>
    <description>Rambling thoughts from your IT guy</description>
    <link>http://nightiron.com/</link>
    <atom:link href="http://nightiron.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Archiving Autotask</title>
        <description>&lt;p&gt;After much wailing and gnashing of teeth our team finally said goodbye to &lt;a href=&quot;http://www.autotask.net&quot;&gt;Autotask&lt;/a&gt; last week.  Turns out it might not be a good idea to take a customer that‚Äôs been month to month for years and suddenly demand they sign a three year contract.&lt;/p&gt;

&lt;p&gt;When you leave Autotask they give you a nice MS SQL .bak file of all of your data.   After getting a trial of SQL 2016 installed I discovered that that Autotask‚Äôs data structure looks like something out of Dante‚Äôs Inferno.  1,215 tables.  558 views. üòØ&lt;/p&gt;

&lt;p&gt;I set about extracting the data that‚Äôs relevant to us - tickets, time entries, and internal notes.  After digging around for a little while I honed in on the tables we‚Äôd need to see the ticket data as well as the technician that worked on it, client, and end user.&lt;/p&gt;

&lt;h3 id=&quot;exporting-first-attempt&quot;&gt;Exporting, first attempt&lt;/h3&gt;

&lt;p&gt;My goal is to get the data out of MS SQL and into Postgresql which will eventually get plumbed by a Rails application.  I think its the IT guy in me but my first thought was to try for a CSV of all the data.  I found some great blogs about the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms162802.aspx&quot;&gt;BCP utility&lt;/a&gt; which is literally for bulk import and export of data.&lt;/p&gt;

&lt;p&gt;This command exports a single table of tasks (tickets) to CSV with tabs separating the fields and &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt; for a new line.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bcp &quot;dbo.tblTask&quot; out ‚Äúc:\export\tblTask.csv&quot; -S localhost \
-d databasename -C RAW -T -c -t ‚Äú\t‚Äù -r &quot;\n&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;First option is the table name&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;out&lt;/strong&gt; destination file name&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-S&lt;/strong&gt;: server name&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;: the database name&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-C&lt;/strong&gt;: the code page to use, don‚Äôt really know about this.  MSDN states that RAW means ‚ÄúNo conversion from one code page to another occurs. This is the fastest option because no conversion occurs.‚Äù&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-T&lt;/strong&gt;: use Windows authentication with the currently logged in user&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-c&lt;/strong&gt;: Stops BCP from prompting for a character type for each field, it uses the character data format for each field.  This is specifically to use when exporting data bound for something other than another MS SQL instance.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-t&lt;/strong&gt; and &lt;strong&gt;-r&lt;/strong&gt; the field and record terminators, not actually needed when using &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; as these are the default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Almost immediately I ran into two issues.  One, BCP
does not export field names.  So there‚Äôs no headers in the CSV.  This was easily resolved by simply running a select query on the tables in question and literally copying the first couple of output rows using the option to include headers in Management Studio (Control + Shift + C).&lt;/p&gt;

&lt;p&gt;The bigger problem was new lines in the data.  A lot our tickets and internal notes contain new line characters.  This is obviously no problem when the data is in a proper DBMS but a CSV file doesn‚Äôt handle newlines very well.  BCP can technically terminate a record using anything you like,  ‚ñì for instance, or maybe ‚ï£. However, Excel and &lt;a href=&quot;http://www.ronsplace.eu/Products/RonsEditor&quot;&gt;Ron‚Äôs Editor&lt;/a&gt; (seriously awesome if you deal with a lot of CSVs) don‚Äôt like this, they expect new lines to terminate records.  Officially CSV is supposed to support new lines in the data but I‚Äôve never been able to figure out.&lt;/p&gt;

&lt;p&gt;At this point I was starting to have flashbacks to another large data migration involving CSVs and hunting for line breaks and other characters for way longer than I cared to. So I decided to rethink my method.  If the goal is to go from one SQL DB to another, why even bother with the intermediary step?  In particular risking data loss with CSV mangling something.  Surely others have done this, maybe there‚Äôs even some sort of neato open source tool for the job‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;exporting-second-times-the-charm&quot;&gt;Exporting, second time‚Äôs the charm&lt;/h3&gt;

&lt;p&gt;Poking around a little more I found a neato &lt;a href=&quot;https://github.com/dalibo/sqlserver2pgsql&quot;&gt;Python tool&lt;/a&gt; for this exact purpose - migrating from MS SQL to Postgresql.  After installing a few prerequisites the tool works in 5 steps.  First you take a SQL dump of the database or individual tables you‚Äôre interested in.  You then run the tool itself to generate some SQL files for Postgres.  Then psql the generated ‚Äúbefore‚Äù script. Next, run a migration using the prerequisite Kettle software.  Finally psql the generated ‚Äúafter‚Äù script.&lt;/p&gt;

&lt;p&gt;This, somewhat incredibly, just worked for the most part.  It barked about some missing associations. I went back into Management Studio and ran a diagram of associations for the six tables we needed - that brought up about 50 tables, most of which contained hilariously irrelevant data.  I was getting a little sad at the idea of migrating 4 dozen extra tables when I decided to check the new Postgres database - everything we needed was there!&lt;/p&gt;

&lt;h3 id=&quot;rails&quot;&gt;Rails&lt;/h3&gt;

&lt;p&gt;As it turns out, massaging Rails to use an existing database is actually quite simple.  I had to do a pretty minimum amount of work on the Postgres database itself.  I spent some time cleaning up field names to match the ‚Äúmodel_id‚Äù naming that Rails expects for associations.&lt;/p&gt;

&lt;p&gt;You‚Äôll need to make sure you‚Äôve got the ‚Äòpg‚Äô gem set, and then just plug in the database in &lt;code class=&quot;highlighter-rouge&quot;&gt;config\database.yml&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;&amp;amp;default&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgresql&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unicode&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5000&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*default&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;autotask_backup&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This of course will also be my production database but for now we‚Äôre just in development mode.&lt;/p&gt;

&lt;p&gt;You then will need to generate the schema file.  I‚Äôm not sure if this is actually necessary but its a good test of whether or not Rails is connecting to your database properly.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rake db:schema:dump&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I noticed at this point that Rails wasn‚Äôt picking up on the  primary key (id).  After correcting this in &lt;a href=&quot;https://eggerapps.at/postico/&quot;&gt;Postico&lt;/a&gt; and re-dumping the schema‚Ä¶&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;version: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# These are extensions that must be enabled in order to support this database&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;enable_extension&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;plpgsql&quot;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;contacts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;force: :cascade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;customer_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                              &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;phone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                        &lt;span class=&quot;ss&quot;&gt;limit: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;phoneext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                     &lt;span class=&quot;ss&quot;&gt;limit: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;fax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                          &lt;span class=&quot;ss&quot;&gt;limit: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Booya!&lt;/p&gt;

&lt;p&gt;Now you need the actual models for Rails.  The regular command line to generate the model is going to create a migration file which you do not want.  So &lt;code class=&quot;highlighter-rouge&quot;&gt;rails g model Contact --skip migration&lt;/code&gt; (or you could just delete the migration file, but that seems sketchy to me)&lt;/p&gt;

&lt;p&gt;Alright.  So let‚Äôs drop down to the console and see if all this actually worked.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[1] pry(main)&amp;gt; Contact.all.sample
  Contact Load (12.4ms)  SELECT &quot;contacts&quot;.* FROM &quot;contacts&quot;
+----------+-----------+----------+-------------+
| id       | firstname | lastname | customer_id |
+----------+-----------+----------+-------------+
| 29683607 | Fake      | Customer | 29683605    |
+----------+-----------+----------+-------------+
1 row in set
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Booya!¬≤&lt;/p&gt;

&lt;p&gt;From here on its just standard Rails development.  I
considered blogging about the rest of the application but this is literally for indexing and reading old data.  So I can‚Äôt imagine it will be that interesting.&lt;/p&gt;

&lt;p&gt;If you‚Äôve been traveling down a similar path, I hope this post has helped. And if you noticed anything incredibly stupid or wrong here - &lt;a href=&quot;/contact/&quot;&gt;let me know!&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Aug 2016 16:45:00 -0400</pubDate>
        <link>http://nightiron.com/blog/2016/08/08/archiving-autotask/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2016/08/08/archiving-autotask/</guid>
      </item>
    
      <item>
        <title>A Year of Programming</title>
        <description>&lt;p&gt;Today marks roughly 5 months since I last posted about my course work in Viking.  In that time I‚Äôve moved through data structures, Sinatra, APIs and web scraping, SQL, and finally Rails.  What started as a static mockup is now a functional clone of Facebook.  Users can sign up, post, comment, like, friend, search for other users, and upload photos.  The latter part of the development was all test driven with feature, model, and controller specs.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Who took the cheapest flight? */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Flights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cheapest_ticket&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itinerary_id&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flights&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flight_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Itineraries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itinerary_id&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flights&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tickets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flight_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reflecting back on the year I think the biggest difference between then and now is confidence.  Understanding that knowing how an application is put together in something like Rails is more important than remembering every single detail.  I‚Äôve coded in airports while waiting on flights. In the passenger seat of my girlfriend‚Äôs car while we drove to visit friends in the pouring rain.  Which isn‚Äôt to say I‚Äôm some sort of superhero, just that I really love doing this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Putting together an efficient query can be messy business&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search_by_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;search_terms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;search_conditions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;first_name ILIKE ?&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;search_terms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; OR &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; OR &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;last_name ILIKE ?&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;search_terms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; OR &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;search_terms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;search_terms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only real issue I‚Äôve faced is finding the time needed to study (and being in front of the computer on top of my regular IT hours).  The Viking course load is no joke, and even though I‚Äôve dedicated around 70 hours a month on average its not nearly the ideal pace.  The main problem is retention, for instance the work I originally did with web scraping is starting to get fuzzy and will require some refreshing when I put that knowledge to use in future projects.&lt;/p&gt;

&lt;p&gt;Ahead of me still is Javascript, and the end of the course.  Happy New Year!&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2015 08:38:00 -0500</pubDate>
        <link>http://nightiron.com/blog/2015/12/30/a-year-of-programming/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/12/30/a-year-of-programming/</guid>
      </item>
    
      <item>
        <title>OSX Utilities</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://jumpcut.sourceforge.net/&quot;&gt;Jumpcut&lt;/a&gt;&lt;/strong&gt; is basically just a clipboard manager.  This is a class of application that sounds extremely geeky unless you think about how often you copy/paste.  Something about IT seems to require an absurd amount of clipboard usage.&lt;/p&gt;

&lt;p&gt;There‚Äôs lots of applications that I guess started as just clipboard managers but overtime morphed in a Frankenstein‚Äôs monster of unwanted features and eye burning UI choices.  Jumpcut does two things 1) Gives you a history of items you‚Äôve copied to the clipboard 2) Scrubs formatting (HTML, Word, whatever) from text.&lt;/p&gt;

&lt;p&gt;Rather than press Command-V to paste something, I press Control+Option+V.  This pops up the Jumpcut UI which shows the most recent item on the clipboard. If you keep holding Control+Option you can use the up and down arrow keys to pick what to paste.&lt;/p&gt;

&lt;p&gt;Really its one of those things you just need to try and then I‚Äôm pretty sure you‚Äôll wonder what you did without it.  Also its free.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://smilesoftware.com/TextExpander&quot;&gt;TextExpander&lt;/a&gt;&lt;/strong&gt; is an extended version of the text shortcuts in OSX and iOS (‚Äúomw‚Äù becomes ‚ÄúOn My Way!‚Äù).   For instance I have a few really lazy shortcuts (TextExpander calls them snippets) like &lt;code class=&quot;highlighter-rouge&quot;&gt;;am&lt;/code&gt; becomes ‚Äúadministrator‚Äù and &lt;code class=&quot;highlighter-rouge&quot;&gt;;gm&lt;/code&gt; becomes my email address.  Of course you could just do that with the expansion built into the OS.&lt;/p&gt;

&lt;p&gt;Where TextExpander comes alive is with ‚ÄúFill-ins‚Äù.  Another snippet I have is &lt;code class=&quot;highlighter-rouge&quot;&gt;;gpom&lt;/code&gt; which pops up a prompt asking me for a commit message and then expands to this (as well pressing enter between each line)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add -A
git commit -m &quot;whatever I just typed&quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Anything that you type regularly can live in TextExpander.  I keep video/phone conference information in there.  I have some form letter type emails that I keep in there that are similar to the git message and automatically enter a subject and body and tab through fields in Outlook.&lt;/p&gt;

&lt;p&gt;There‚Äôs a little statistics pane in TextExpander.  Its apparently auto typed 68,854 characters for me.  Not too shabby.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2015 03:50:43 -0400</pubDate>
        <link>http://nightiron.com/blog/2015/10/27/osx-utils/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/10/27/osx-utils/</guid>
      </item>
    
      <item>
        <title>Switching to Mac revisited</title>
        <description>&lt;p&gt;Its been about 8 months since I made the switch to using a Macbook Pro as my ‚Äúdaily driver‚Äù system.  I now mostly just use Windows via RDP into my old tower or some virtual machine.  In terms of pure hardware, the system is a dream.  Its battery will last me all day if I happen to be working from a client‚Äôs office.  The system reliably resumes immediately, everytime the lid is opened (a feat that stills to allude Windows based notebooks).  Most other things about the notebook itself you‚Äôll find in every review of Apple hardware - the keyboard and trackpad are awesome, retina screen looks great, etc.&lt;/p&gt;

&lt;p&gt;After purchase I almost immediately had an issue where the Contacts App did not want to pull down all of the contacts from my Exchange Online mailbox.  Apparently Outlook for Mac had inserted some hidden categories into my contacts that the Contacts app could not handle.  I manually stripped all categories on the contacts and that issue was in the rearview.  This was really the only showstopper type bug I encountered as I needed to have those Contacts for work.&lt;/p&gt;

&lt;p&gt;The funny thing about OSX is I think the best feature is the applications specifically developed for OSX.  Its also very refreshing to have built-in apps that can handle really basic things.  Preview can basically open any file type I throw at it and handle basic PDF markup.  Finder automatically expands compressed files.  Windows of course does this in newer versions but even as recent as Windows 7 you had to immediately go out and find a PDF viewer.  And the included viewer in Windows 8 doesn‚Äôt seem to have any functionality beyond displaying the PDF (in full screen, Modern UI mode).&lt;/p&gt;

&lt;p&gt;Its also really awesome to use iMessage from the notebook.  I wish Google would let Hangouts break free from the heinous Chrome extension and let us add it to the Messages app.&lt;/p&gt;

&lt;p&gt;A lot of people have this mentality that software should just be free, or that they‚Äôll never pay for software.  Or that paying for software is some sort of admission of defeat, that you couldn‚Äôt pirate it.  On Windows I would just hit up [ninite.com][ninite] and get whatever was needed and I can‚Äôt think of much besides the Office suite that I would actually purchase.  I never actually &lt;em&gt;enjoyed&lt;/em&gt; using software in Windows, with maybe the exception of more recent versions of Outlook.&lt;/p&gt;

&lt;p&gt;Since I didn‚Äôt really know what would be the best program for XYZ on OSX I set aside a budget of a few hundred dollars incase I needed or wanted to purchase software.&lt;/p&gt;

&lt;p&gt;[ninite]:&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Aug 2015 12:59:10 -0400</pubDate>
        <link>http://nightiron.com/blog/2015/08/04/switching-to-mac-revisited/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/08/04/switching-to-mac-revisited/</guid>
      </item>
    
      <item>
        <title>Precious Gems</title>
        <description>&lt;p&gt;This past month with Viking has been pretty interesting.  After getting through
the basic syntax of Ruby we went even deeper into object orientation.&lt;/p&gt;

&lt;p&gt;###Mastermind
OOP wrapped up with recreating the classic board game &lt;a href=&quot;https://en.wikipedia.org/wiki/Mastermind_(board_game)&quot;&gt;Mastermind&lt;/a&gt;.  The main point of the exercise was to drive home the ideas behind method decomposition, classes, and other basic principles of OOP.&lt;/p&gt;

&lt;p&gt;However I had the most fun getting Mastermind to break my codes using &lt;a href=&quot;https://en.wikipedia.org/wiki/Donald_Knuth&quot;&gt;Donald Knuth‚Äôs&lt;/a&gt; algorithm.  Properly optimized the software can break a code in
five guesses.&lt;/p&gt;

&lt;p&gt;The idea is that the software first makes a list of every possible code (in regular Mastermind that‚Äôs 1296 codes).  It then makes a pretty standard first guess.  Like &lt;span class=&quot;red&quot;&gt;red red&lt;/span&gt; &lt;span class=&quot;green&quot;&gt;green green&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;The real magic of the method didn‚Äôt make sense to me for a while.  The software gets feedback on its first guess, like say one spot is exactly correct (black peg) and one is the correct color but in the wrong position (white peg).  The software runs through the list of all 1296 possible codes, eliminating any that wouldn‚Äôt at least get that feedback.   Then it makes another guess and another elimination pass.  And so on, until it cracks the code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_guess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_feedback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_feedback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@last_guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@last_guess&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@possibles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keep_if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;last_feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;last_feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@guesses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@last_guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimal_guess&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;optimal_guess&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@possibles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@possibles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The above is my code for this.  And here is the software cracking a code I set.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/mastermind.gif&quot; alt=&quot;Mastermind code being cracked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve had to focus on writing code that actually makes sense to someone besides me when I‚Äôm writing it.  Just a few weeks later and those two methods read like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Voynich_manuscript&quot;&gt;Voynich Manuscript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;###TDD Minesweeper&lt;/p&gt;

&lt;p&gt;The next unit focused on test driven development with Rspec.  I had a little experience with this from Michael Hartl‚Äôs &lt;a href=&quot;https://www.railstutorial.org/&quot;&gt;Rails Tutorial&lt;/a&gt;.   TDD and Rspec are definitely frustrating to get started with.   You‚Äôre constantly thinking about what to test, if you‚Äôre being too granular, if it wouldn‚Äôt be best to just run a higher level integration test that &lt;em&gt;should&lt;/em&gt; fail if a dependent method breaks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/rspec.png&quot; alt=&quot;Green Rspec tests&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite the frustration, it is a great feeling to revisit well tested code, to refactor it confidentially as you watch your tests re-run with each change.&lt;/p&gt;

&lt;p&gt;Minesweeper also presented an interesting problem to solve.  A recursive function is needed to automatically clear cells when it makes sense to do so.  It should clear the cells or tiles of the board right up to any tile that is adjacent to a mine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/minesweeper.gif&quot; alt=&quot;Minesweeper being played, poorly&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This required a lot of different dependent functions.  You‚Äôd need something that could find the ‚Äúneighbors‚Äù of a cell.  You need to add those neighbors to a queue and then come back and check all of &lt;em&gt;their&lt;/em&gt; neighbors and so on until there was nothing left to check.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;possible_neighbors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;possible_neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbor&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;auto_reveal_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;test_cell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_cell&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue_cells_for_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;auto_reveal_cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I‚Äôm a lot happier with this code than I was with Mastermind, initially the auto_reveal_search was one huge method that I was able to break down into a half dozen smaller ones.  TDD definitely forces a lot of this discipline.  If its hard to test, its probably bad code.&lt;/p&gt;

&lt;p&gt;I‚Äôm now in the midst of data structures and estimating the time complexity of software using &lt;a href=&quot;https://www.youtube.com/watch?v=iOq5kSKqeR4&quot;&gt;Big O notation&lt;/a&gt;.  To infinity‚Ä¶ and beyond.&lt;/p&gt;

&lt;p&gt;(Sorry, that‚Äôs sort of the perfect way to end something when you‚Äôre talking about Big O)&lt;/p&gt;

</description>
        <pubDate>Sat, 01 Aug 2015 14:54:09 -0400</pubDate>
        <link>http://nightiron.com/blog/2015/08/01/precious-gems/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/08/01/precious-gems/</guid>
      </item>
    
      <item>
        <title>puts(Hello World!)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/Screen%20Shot%202015-06-02%20at%201.52.25%20PM_large.png&quot; alt=&quot;Jeff Lebowski&#39;s &amp;quot;Danebook&amp;quot; page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It has been about a month since I was accepted into the &lt;a href=&quot;http://vikingcodeschool.com&quot;&gt;Viking Code School&lt;/a&gt; and a few weeks since I began my coursework for their Flex program (for folks who can‚Äôt commit to the school full time).&lt;/p&gt;

&lt;p&gt;I think the experience so far can be summed up as ‚ÄúWhoa!‚Äù.&lt;/p&gt;

&lt;p&gt;While I don‚Äôt doubt that there are hordes of self-made master programmers, I was getting discouraged by the lack of depth of a lot of the online programming courses I tried.  Their efforts were summed up very well by Erik Trautman‚Äôs blog post &lt;a href=&quot;http://www.vikingcodeschool.com/posts/why-learning-to-code-is-so-damn-hard&quot;&gt;Why Learning To Code Is So Damn Hard&lt;/a&gt;.  Each of these courses holds your hand with bite size projects, slick videos, and really polished marketing and branding.  But coming out on the other side of their curriculum you are not a developer.  At best you might be able to have a conversation with a developer.&lt;/p&gt;

&lt;p&gt;Even more in-depth work, such as &lt;a href=&quot;https://www.railstutorial.org/&quot;&gt;Michael Hartl‚Äôs Rails‚Äô Tutorial&lt;/a&gt; wasn‚Äôt enough for me (and Rails‚Äô Tutorial is seriously awesome).  Viking‚Äôs freely available &lt;a href=&quot;http://www.vikingcodeschool.com/prep&quot;&gt;‚ÄúPrep‚Äù courses&lt;/a&gt; are what made me realize that I was basically never going to learn anything about development by only &lt;em&gt;watching&lt;/em&gt; videos and typing out lines of code from a book.  In order to learn I need to &lt;strong&gt;do&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With Viking, while there is plenty of reading, demonstration videos, and tests there are also truly open ended projects.  The screenshot above is from ‚ÄúDanebook‚Äù.  After learning HTML5, CSS3, SASS, and Bootstrap you‚Äôre given a few mockups of the site and that‚Äôs it.  Everything else you code up from nothing.  Finishing one of those projects gives so much more of a feeling of accomplishment than getting to the end of any simple tutorial where you might have typed a few dozen lines of code at the most.&lt;/p&gt;

&lt;p&gt;Today I‚Äôve just put the finishing touches on my &lt;a href=&quot;https://github.com/nonadmin/assignment_toh&quot;&gt;Towers of Hanoi&lt;/a&gt; game from the first Ruby unit.  And I can‚Äôt wait for more.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Jun 2015 08:03:21 -0400</pubDate>
        <link>http://nightiron.com/blog/2015/06/02/puts(hello-world!)/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/06/02/puts(hello-world!)/</guid>
      </item>
    
      <item>
        <title>Monitoring DirectAccess</title>
        <description>&lt;p&gt;We recently deployed &lt;a href=&quot;https://technet.microsoft.com/en-us/library/dn636118.aspx&quot;&gt;Windows DirectAccess&lt;/a&gt; for one of our clients and wanted to monitor the deployment.  In particular I was interested in the number of active DirectAccess sessions and if any errors were detected.  The Remote Access MMC snap-in (in Server 2012 R2) has a great  status page that runs down all of DirectAccess‚Äô components and reports any errors that are detected.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Screen%20Shot%202015-02-17%20at%203.17.44%20PM_large.png&quot; alt=&quot;DirectAccess built-in monitoring&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can basically assume that if any of these are red you‚Äôre going to have an issue.  With PRTG the number of components in an error state could be a channel in a sensor which we could monitor and report on (for instance if the number of errors is greater than 0).   Similarly another channel could be the number of sessions.&lt;/p&gt;

&lt;p&gt;DirectAccess comes loaded with a few PowerShell cmdlets for monitoring and reporting on its status.  In particular &lt;strong&gt;Get-RemoteAccessHealth&lt;/strong&gt; and &lt;strong&gt;Get-RemoteAccessConnectionStatisticsSummary&lt;/strong&gt; will give you a lot of information.  In order to make that data useful for PRTG we want to strip that output down from something like this (the raw output of Get-RemoteAccessHealth)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Component            RemoteAccessServer   HealthState     TimeStamp            Id              OperationStatus
---------            ------------------   -----------     ---------            --              ---------------
Server               localhost            OK              1/27/2015 11:05:4...
6to4                 localhost            OK              1/27/2015 11:01:0...
Vpn Addressing       localhost            Disabled        1/27/2015 11:01:0...
Network Security     localhost            OK              1/27/2015 11:01:0...
Dns                  localhost            OK              1/27/2015 11:05:4...
IP-Https             localhost            OK              1/27/2015 11:01:0...
Nat64                localhost            OK              1/27/2015 11:01:0...
Dns64                localhost            OK              1/27/2015 11:01:0...
IPsec                localhost            OK              1/27/2015 11:01:0...
Kerberos             localhost            OK              1/27/2015 11:01:0...
Domain Controller    localhost            OK              1/27/2015 11:01:0...
Management Servers   localhost            Disabled        1/27/2015 11:01:0...
Network Location ... localhost            OK              1/27/2015 11:05:4...
Otp                  localhost            Disabled        1/27/2015 11:01:0...
High Availability    localhost            Disabled        1/27/2015 11:01:0...
Isatap               localhost            Disabled        1/27/2015 11:01:0...
Vpn Connectivity     localhost            Disabled        1/27/2015 11:01:0...
Teredo               localhost            Disabled        1/27/2015 11:01:0...
Network Adapters     localhost            OK              1/27/2015 11:01:0...
Services             localhost            OK              1/27/2015 11:05:4...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To literally just the number of components with a HealthState of ‚Äúerror‚Äù.  This gives us our first sensor channel, ‚Äúerror count‚Äù.   Our second channel is similar, I just want know how many active DirectAccess sessions we have which involves stripping down the output of Get-RemoteAccessConnectionStatisticsSummary&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;TotalConnections           : 8
TotalDAConnections         : 8
TotalVpnConnections        : 0
TotalUniqueUsers           :
MaxConcurrentConnections   : 19
TotalCumulativeConnections : 2550
TotalBytesIn               : 4024483872
TotalBytesOut              : 8136960808
TotalBytesInOut            : 12161444680&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To just the number of TotalDAConnections.&lt;/p&gt;

&lt;p&gt;The full PowerShell script is below&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;?xml version=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; encoding=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Windows-1252&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; ?&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;prtg&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;Try&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$daErrorCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Get-RemoteAccessHealth -ComputerName SERVER | &lt;span class=&quot;nb&quot;&gt;Where-Object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;.HealthState -match &lt;span class=&quot;s1&quot;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.count
    &lt;span class=&quot;nv&quot;&gt;$daUserCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-RemoteAccessConnectionStatisticsSummary -ComputerName SERVER | &lt;span class=&quot;nb&quot;&gt;Select&lt;/span&gt; -ExpandProperty TotalDAConnections
 
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;result&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;channel&amp;gt;DirectAccess Errors&amp;lt;/channel&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$daErrorCount&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/value&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/result&amp;gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;result&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;channel&amp;gt;DirectAccess Sessions&amp;lt;/channel&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$daUserCount&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/value&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/result&amp;gt;&quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;Catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;system.exception]
 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;error&amp;gt;1&amp;lt;/error&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;text&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/text&amp;gt;&quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/prtg&amp;gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This results in a PRTG sensor with the following channel setup&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Screen%20Shot%202015-02-17%20at%2010.50.01%20PM_large.png&quot; alt=&quot;Silvrback blog image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key lines here that give PRTG its value for the channels are&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(Get-RemoteAccessHealth -ComputerName SERVER | Where-Object {$_.HealthState -match &#39;Error&#39;} | measure).count&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Get-RemoteAccessConnectionStatisticsSummary -ComputerName SERVER | Select -ExpandProperty TotalDAConnections&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first is getting our error count.  As we move down the command we‚Äôre filtering the output of Get-RemoteAccessHealth for the HealthState column and then looking for any matches on the value ‚ÄúError‚Äù.  Both measure and count are needed to just return in integer, measure by itself returns this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Count    : 0
Average  :
Sum      :
Maximum  :
Minimum  :
Property :&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Get-RemoteAccessHealth is returning a table and PowerShell makes it pretty easy to search through it like you might search for something in Excel.  Get-RemoteAccessConnectionStatisticsSummary is a little trickier.   Its returning a list and if you try to use the same method of stripping its output as Get-RemoteAccessHealth that won‚Äôt work.  However Select -ExpandProperty will.  This took me a while to figure out until I piped the output of each command through Get-Member which reveals the Object-Types being returned.  &lt;a href=&quot;http://windowsitpro.com/powershell/powershell-basics-formatting&quot;&gt;This article&lt;/a&gt; was very helpful during that process.&lt;/p&gt;

&lt;p&gt;The rest of the script is pretty standard fare for PRTG‚Äôs custom XML sensors (a lot of great examples can be found &lt;a href=&quot;https://code.google.com/p/prtg-addons/source/browse/#svn%2Ftrunk%2FCustom_EXE_Sensors%2FWindows_Powershell&quot;&gt;here&lt;/a&gt;).  The entire script is returning back to PRTG something that looks like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=`&quot;1.0`&quot; encoding=`&quot;Windows-1252`&quot; ?&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;prtg&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;result&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;DirectAccess Errors&lt;span class=&quot;nt&quot;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/result&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;result&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;DirectAccess Sessions&lt;span class=&quot;nt&quot;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;10&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/result&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/prtg&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which is just the XML formatting that PRTG needs to construct a sensor.  The try statement is used to catch any errors since PowerShell can be annoying to get setup for remote monitoring and I wanted to make sure that any issues with the sensor itself were handled by PRTG instead of the sensor silently failing (for instance returning 0 for a channel, which wouldn‚Äôt necessarily set off any alarms but might happen if one of our cmdlets failed)&lt;/p&gt;

</description>
        <pubDate>Tue, 17 Feb 2015 06:51:42 -0500</pubDate>
        <link>http://nightiron.com/blog/2015/02/17/monitoring-directaccess/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2015/02/17/monitoring-directaccess/</guid>
      </item>
    
      <item>
        <title>Straddling OSX and Windows</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;According to stock photo sites in order to use an Apple product you must obsessively arrange your desk into perfect geometric patterns, like a serial killer.  I have not done this yet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG_1434_large.JPG&quot; alt=&quot;my messy desk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a while now I‚Äôve been interested in web development.  I‚Äôll run through a tutorial here and there - &lt;a href=&quot;http://railstutorial.org&quot;&gt;railstutorial.org&lt;/a&gt; and &lt;a href=&quot;http://learnpythonthehardway.org&quot;&gt;learn python the hard way&lt;/a&gt; have been my favorites (yes I realize these are two different languages, I have commitment issues).  If you‚Äôre primarily using Windows modern web development can be frustrating to learn.  Every tutorial starts out instructing you to use an OSX package manager and generally include some huge caveat for getting your development environment configured in Windows.  I had no desire to learn Microsoft‚Äôs languages, such as ASP.NET, so I decided I should look into a Macbook.  Also that my Dell notebook has always been kind of a piece of junk and that I don‚Äôt particularly like Windows 8/8.1 helped push me towards ‚Äúswitching‚Äù.&lt;/p&gt;

&lt;p&gt;I‚Äôm now typing this from my Macbook Pro and Thunderbolt display.  I haven‚Äôt fully made the switch for my day job as a remote IT worker.  I‚Äôm still trying to suss out how I want my browsers setup, which softphone to use, and some other odds and ends.  Funny thing is, there isn‚Äôt much I need Windows for in order to support our clients that mostly run Windows.  I will probably always keep around a Windows system (&lt;a href=&quot;http://www.nonadmin.com/home-server&quot;&gt;or 12&lt;/a&gt;) because other IT people don‚Äôt respect you if you only have one computer.&lt;/p&gt;

&lt;p&gt;This is sort of a compilation of things I‚Äôve noticed and some tips for anyone coming from the Windows world.    I‚Äôve arranged things with buying tips first and then good, bad, and miscellaneous observations.&lt;/p&gt;

&lt;p&gt;#Buying Tips&lt;/p&gt;

&lt;p&gt;Besides the notebook I researched and bought a few things from Amazon. The &lt;a href=&quot;http://amzn.to/1D3fmGd&quot;&gt;mStand laptop stand&lt;/a&gt; which is way overpriced for a piece of bent aluminum but I guess it holds the notebook at eye level adequately.  I also picked up an &lt;a href=&quot;http://amzn.to/1wYwpJ5&quot;&gt;ethernet adapter/usb hub&lt;/a&gt; from Anker which instantly became useful because I didn‚Äôt have the display (with its NIC) initially.  I really like Anker‚Äôs products, they‚Äôre generally pretty inexpensive but well built.  I also grabbed an &lt;a href=&quot;http://amzn.to/1HXbO9r&quot;&gt;Incase Neoprene Sleeve&lt;/a&gt; that is apparently made for the 13‚Äù MacBook Pro but has a little too much extra space in it. I feel like it ought to fit the notebook snugly and not allow it to move at all inside the sleeve.  Finally, I purchased the &lt;a href=&quot;http://www.amazon.com/gp/product/B004YLCKYA/ref=oh_aui_detailpage_o02_s01?ie=UTF8&amp;amp;psc=1&quot;&gt;Thunderbolt Display&lt;/a&gt; from Amazon as well.  I was going to purchase a Magsafe&amp;gt;Magsafe 2 power adapter as the Thunderbolt display‚Äôs charging cable isn‚Äôt compatible with the latest Macbooks but then I found out that these are now being included with the displays.&lt;/p&gt;

&lt;p&gt;For the notebook itself I found a really handy &lt;a href=&quot;http://appleinsider.com/mac_price_guide&quot;&gt;price guide&lt;/a&gt; from Apple Insider and ended up picking up the system from Adorama with 3 years of AppleCare bundled.   They threw in an Apple TV with the promo code from Apple Insider but checking the guide now that has changed to a mighty mouse.  I also checked the &lt;a href=&quot;http://buyersguide.macrumors.com/&quot;&gt;Buyer‚Äôs Guide&lt;/a&gt; from Mac Rumors, just incase a new model was about to drop.&lt;/p&gt;

&lt;p&gt;Initially I was not going to buy the Thunderbolt display but one issue with living in Apple‚Äôs world is you have to play by their rules.  There is no official dock for the Macbook, the Thunderbolt Display is the closest thing to it.  My other options were Thunderbolt hubs which are several hundred dollars and may or may not have worked with my existing monitor which uses DVI-D.  So I reluctantly decided to get the Thunderbolt display but I feel like Apple could make a lot of people happy if they‚Äôd just release a dock.   I use a simple KVM to switch keyboard and mouse between the notebook and my PC tower, which is exclusively connected to my old display.  I thought I would need an Apple keyboard but really its no big deal.  The keys are in the same position except with the Windows key acting as the Command key.&lt;/p&gt;

&lt;p&gt;#The Good&lt;/p&gt;

&lt;p&gt;I occasionally listen to the &lt;a href=&quot;http://www.macpowerusers.com/&quot;&gt;Mac Power Users podcast&lt;/a&gt;, which was kind of funny to do before I actually owned an Apple computer.  But from it I gleaned a lot of information on OSX applications I‚Äôd want to pick up.  So far &lt;a href=&quot;http://smilesoftware.com/TextExpander/index.html&quot;&gt;TextExpander &lt;/a&gt;has been my favorite.  If you‚Äôre not familiar with text expansion, you basically type a shortcut and the application automatically fills in something for you.  For instance if I type &lt;code class=&quot;highlighter-rouge&quot;&gt;;gm&lt;/code&gt; I get my email address.    It seems like I type my email address about 30 thousand times a day so I love having that.  I‚Äôve also started using the advanced features (known as macros) to &lt;a href=&quot;http://vimeo.com/44456425&quot;&gt;quickly fill out&lt;/a&gt; some reminder emails I send frequently that are always the same text.  I was already a &lt;a href=&quot;https://agilebits.com/onepassword&quot;&gt;1Password&lt;/a&gt; user and its definitely been my favorite password manager.  It is expensive to get the bundle for Windows, OSX, and iOS but really worth it considering how much information I store in the app and how much &lt;a href=&quot;http://www.nonadmin.com/password-insecurity&quot;&gt;more secure&lt;/a&gt; it makes my online life.  1password might be the prettiest piece of software I use, which &lt;em&gt;does&lt;/em&gt; matter (damn it).  I still have some other applications I‚Äôd like to check out, namely Hazel and Omnifocus.&lt;/p&gt;

&lt;p&gt;The Macbook‚Äôs trackpad and keyboard are the best I‚Äôve used on a notebook, period.  Trackpads on PC notebooks have long been a point of contention.  Whether they‚Äôre too small, have weird gestures, or just plan don‚Äôt work there‚Äôs always some issue.  The latest EliteBooks from HP have come the closest to getting it right that I‚Äôve seen.  Battery life on the notebook has been great and I love that OSX will tell you which apps are eating a lot of energy.  Coming from a system that mysteriously always ran awful on battery this has been most excellent.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.apple.com/osx/continuity/&quot;&gt;continuity features&lt;/a&gt; of Yosemite were a big reason I was interested in switching.  I already own an iPhone and iPad.  Being able to iMessage, and even send regular text, from the computer is very convenient.    This is where I feel like Apple is really edging out Microsoft, it would give people a reason to actually consider Windows Phone to have this sort of functionality.&lt;/p&gt;

&lt;p&gt;#The Bad&lt;/p&gt;

&lt;p&gt;The Macbook has only locked up twice but both were kind of worrying.  The first  was actually right out of the box during setup.  It hung forever when I declined to setup iCloud Drive.  When I forced the system to reboot it went  through but had apparently already created my user account.  I elected to just wipe the system out and start over using the download from internet option to install Yosemite.  This worked without issue.  The system also froze completely when I first connected it to the Thunderbolt Display.&lt;/p&gt;

&lt;p&gt;I almost immediately discovered an unfortunate bug with Exchange Online and Yosemite.  The Contacts App will not sync contacts from an Office 365 Exchange Online account (or at least from my account).  An issue &lt;a href=&quot;http://www.andrewconnell.com/blog/resolving-contacts-sync-on-os-x-error-soapwebserviceserrordomain&quot;&gt;documented by others&lt;/a&gt; but remains unfixed even in the latest Yosemite beta (currently 10.10.2).  I opened a case with Microsoft support, who promptly laughed and then closed the case.  I haven‚Äôt tried opening one with Apple just yet.  I worked around the problem by manually copying my contacts into iCloud.  There‚Äôs a sort of hack to use Microsoft‚Äôs OWA app in iOS to sync your contacts into iCloud but this only works on the default/base Contacts folder and I maintain more than one.&lt;/p&gt;

&lt;p&gt;#The Miscellaneous&lt;/p&gt;

&lt;p&gt;One of the things that I notice the most is that I‚Äôve gotten a feel for performance on a PC.  You get a sixth sense for if something isn‚Äôt right.  Like if Outlook takes longer than 30 seconds to open its probably not going to open at all.  I feel a little lost sometimes on the Mac if something unexpected happens and I find myself starring at the beachball.  I also really miss indicator lights for disk activity, etc, and find myself tapping the caps lock key to make sure my Macbook is alive.&lt;/p&gt;

&lt;p&gt;There are way more boot options for the Mac than Windows and I sort of wish they were all consolidated into one menu.  Although not having the POST and then Windows load that I‚Äôm used to is what makes for the variety of options/confusion.&lt;/p&gt;

&lt;p&gt;I immediately loaded Bootcamp on the system but I haven‚Äôt really had much reason to use it.  &lt;a href=&quot;http://www.vmware.com/products/fusion&quot;&gt;VMWare Fusion&lt;/a&gt; can use your Bootcamp partition as a virtual machine to run Windows apps within OSX, this is good because you don‚Äôt need to devote any more disk space to another virtual hard drive.  Initially I thought I would probably use Fusion to run Outlook 2013 instead of the latest Outlook for Mac but then I discovered that Fusion takes a good chunk of battery and really the latest Outlook for Mac is good enough. I‚Äôd still like it to have more feature parity with the Windows version and to stop using Exchange Web Services (Windows connects to Exchange using MAPI).  At work I‚Äôve been going back and forth with Microsoft for months to try to figure out why the latest Outlook for Mac will not send attachments larger than 10 or so MB when using an Exchange 2010 account.&lt;/p&gt;

&lt;p&gt;So far Apple has lived up to its promise to ‚Äújust work‚Äù in every way except for the Contacts bug.  I hope to update this post and add others with more good things as time goes on.&lt;/p&gt;

</description>
        <pubDate>Mon, 29 Dec 2014 06:45:57 -0500</pubDate>
        <link>http://nightiron.com/blog/2014/12/29/straddling-osx-and-windows/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2014/12/29/straddling-osx-and-windows/</guid>
      </item>
    
      <item>
        <title>Godaddy sucks</title>
        <description>&lt;p&gt;Last week the HTTP monitoring sensors for one of our clients started going haywire.  Their site was taking way too long to load or not loading at all.  Going to the site in a web browser presented alternating database errors and partial loads of the content.&lt;/p&gt;

&lt;p&gt;Most of our clients are hosted through Godaddy and were originally setup years ago.  If we were making that decision again it‚Äôd probably be with a different company.  But the cost of moving clients off Godaddy pretty much outweighs our personal feelings about them.&lt;/p&gt;

&lt;p&gt;I called Godaddy support about the site.  For hosting support you end up speaking with a first level phone rep and if you‚Äôre escalated it just means that same phone rep talks to someone at a higher level for you.  So after deflecting her initial assertion that our Wordpress was configured incorrectly she escalated the call.  Second level apparently told her that we should enable SSH access to our account which would migrate everything to a different datacenter.  I protested this, we didn‚Äôt need SSH access and this seemed like a really hack method of resolving issues.  She continued to insist this was the only option and so I went ahead with it.&lt;/p&gt;

&lt;p&gt;A few days later and the site was loading fine.  The rep had said that some updates would need to be made to the Wordpress configuration to point to the new database location but we never received the email that was supposed to detail these changes.  So I logged into our client‚Äôs hosting panel and was presented with a page that stated we didn‚Äôt have a hosting plan.&lt;/p&gt;

&lt;p&gt;I called Godaddy again.  The phone rep reported that the site never migrated completely.  The content is on the new server while the database is still on the old system.  Godaddy‚Äôs solution to this?  Remove the (Wordpress) database, which will bring the site down, but will allow the migration to complete.  And then restore the database on the new system.  Total downtime?  1-3 &lt;strong&gt;Days&lt;/strong&gt;.  We still have access to the data and old database, and so my suggestion was that a new hosting account be created and we simply upload everything and restore a database backup.  Godaddy says this will work but we‚Äôll need to purchase the hosting plan.  And we‚Äôll need to do all the migration legwork ourselves.&lt;/p&gt;

&lt;p&gt;So basically Godaddy support tells me to do something which breaks our hosting plan and then tells me to take the site down to fix it, or migrate to a new hosting plan on our dime to fix things without any downtime.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Aug 2014 07:42:44 -0400</pubDate>
        <link>http://nightiron.com/blog/2014/08/25/godaddy-sucks/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2014/08/25/godaddy-sucks/</guid>
      </item>
    
      <item>
        <title>Randomizing new Plex pre-roll feature</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/vlcsnap-2014-08-14-00h28m55s45_large.png&quot; alt=&quot;Simpsons THX Preroll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last week the wonderful folks at Plex announced support for extras and trailers to play before you watch a movie.  Which was already pretty great, but then a few days ago they &lt;a href=&quot;https://blog.plex.tv/2014/08/11/new-trailers-features/&quot;&gt;added support&lt;/a&gt; for a custom ‚Äúpre-roll‚Äù to play after the trailers and before your movie.  This immediately made me think of all the awesome stuff that used to play in movie theatres and on home video - THX, creepy lobby snack commercials, etc.&lt;/p&gt;

&lt;p&gt;Right now the feature requires that you set one video from your library as the pre-roll clip.  I wanted to randomize this so the clip would change occationally.  Luckily the setting is stored in the registry (by the way this is for folks using Windows as their Plex server) under this key:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HKEY_CURRENT_USER\Software\Plex, Inc.\Plex Media Server\CinemaTrailersPrerollID
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So for instance, the full registry key for one of my clips looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[HKEY_CURRENT_USER\Software\Plex, Inc.\Plex Media Server]
&quot;CinemaTrailersPrerollID&quot;=&quot;http://plex.tv/web/app#!/server/2b6b5...
...099e7fcbd0/details/%2Flibrary%2Fmetadata%2F4655&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There‚Äôs probably a million ways to do this but I created a .reg file for each pre-roll in my collection and then used this VBScript to randomly insert the registry value for one of them.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vbnet&quot; data-lang=&quot;vbnet&quot;&gt;Dim WshShell, intOption

Set WshShell = Wscript.CreateObject(&quot;Wscript.Shell&quot;)
Randomize()
intOption = Int(5*Rnd())

Select Case intOption
  Case 0
    WshShell.Run &quot;regedit /S C:\etc\pre-roll-1.reg&quot;,0,True
  Case 1
    WshShell.Run &quot;regedit /S C:\etc\pre-roll-2.reg&quot;,0,True
  Case 2
    WshShell.Run &quot;regedit /S C:\etc\pre-roll-3.reg&quot;,0,True
  Case 3
    WshShell.Run &quot;regedit /S C:\etc\pre-roll-4.reg&quot;,0,True
  Case 4
    WshShell.Run &quot;regedit /S C:\etc\pre-roll-5.reg&quot;,0,True
End Select

Set WshShell = Nothing&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, I set that to run on a schedule every hour.&lt;/p&gt;

&lt;p&gt;I imagine we‚Äôll have the option to do something like this from Plex itself before too long.  On the blog linked above there were already a few requests for it.  Regardless, these new features are slick and I hope convince more folks to sign up for Plex pass.&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Aug 2014 07:32:33 -0400</pubDate>
        <link>http://nightiron.com/blog/2014/08/01/randomizing-new-plex-pre-roll-feature/</link>
        <guid isPermaLink="true">http://nightiron.com/blog/2014/08/01/randomizing-new-plex-pre-roll-feature/</guid>
      </item>
    
  </channel>
</rss>
